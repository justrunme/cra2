#!/bin/bash

# === Resolve path to modules ===
if [[ -f "/opt/cra2/modules/colors.sh" ]]; then
  SCRIPT_DIR="/opt/cra2"
else
  SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
fi

MODULES_DIR="$SCRIPT_DIR/modules"

# === Load modules ===
source "$MODULES_DIR/colors.sh"
source "$MODULES_DIR/logger.sh"
source "$MODULES_DIR/config.sh"
source "$MODULES_DIR/platform.sh"
source "$MODULES_DIR/git.sh"

# === Default flags ===
PULL_ONLY=false
DRY_RUN=false

# === Parse flags ===
for arg in "$@"; do
  case "$arg" in
    --pull-only) PULL_ONLY=true ;;
    --dry-run) DRY_RUN=true ;;
    --help)
      echo "Usage: update-all [--pull-only] [--dry-run]"
      exit 0
      ;;
    *)
      echo -e "${RED}‚ùå Unknown flag: $arg${RESET}"
      echo "Use --help to see available options."
      exit 1
      ;;
  esac
done

# === File paths ===
LIST_FILE="$HOME/.repo-autosync.list"
LOG_FILE="$HOME/.create-repo.log"
ERROR_LOG="$HOME/.create-repo-errors.log"

# === Start ===
if [ ! -f "$LIST_FILE" ]; then
  echo -e "${YELLOW}‚ö†Ô∏è No repos tracked. Use create-repo to track repositories.${RESET}"
  exit 0
fi

echo -e "${BOLD}üîÑ Starting sync of tracked repositories...${RESET}"

while IFS= read -r repo_path || [[ -n "$repo_path" ]]; do
  [ -z "$repo_path" ] && continue
  [ ! -d "$repo_path/.git" ] && echo -e "${RED}‚ùå Not a Git repo: $repo_path${RESET}" && continue

  cd "$repo_path" || continue
  PROJECT_NAME=$(basename "$repo_path")
  BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "main")

  # === Load local config ===
  LOCAL_CONF="$repo_path/.create-repo.local.conf"
  if [ -f "$LOCAL_CONF" ]; then
    echo "‚ÑπÔ∏è Loading local config: $LOCAL_CONF"
    source "$LOCAL_CONF"
    if [ "$disable_sync" = "true" ]; then
      echo -e "üö´ ${YELLOW}$PROJECT_NAME skipped (disabled via local config)${RESET}"
      continue
    fi
  fi

  echo -e "\nüìÅ ${BOLD}$PROJECT_NAME${RESET} ${DIM}[$repo_path]${RESET}"
  echo -e "üîÄ Current branch: ${CYAN}$BRANCH${RESET}"

  # === Git pull ===
  echo -e "‚¨áÔ∏è  Pulling..."
  if git pull origin "$BRANCH"; then
    echo -e "${GREEN}‚úÖ Pull success${RESET}"
  else
    echo -e "${RED}‚ùå Pull failed${RESET}"
    log_error "$PROJECT_NAME" "$repo_path"
    continue
  fi

  if [ "$PULL_ONLY" = true ]; then
    echo -e "üì¶ Pull-only mode active. Skipping push."
    log_success "$PROJECT_NAME" "$repo_path"
    continue
  fi

  if [ "$DRY_RUN" = true ]; then
    echo -e "üß™ Dry-run mode: simulating push..."
    git status
    log_success "$PROJECT_NAME (dry-run)" "$repo_path"
    continue
  fi

  # === Git push ===
  echo -e "‚¨ÜÔ∏è  Pushing..."
  if git push origin "$BRANCH"; then
    echo -e "${GREEN}‚úÖ Push success${RESET}"
    log_success "$PROJECT_NAME" "$repo_path"
  else
    echo -e "${RED}‚ùå Push failed${RESET}"
    log_error "$PROJECT_NAME" "$repo_path"
  fi

done < "$LIST_FILE"
