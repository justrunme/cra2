#!/bin/bash
set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/modules/colors.sh"
source "$SCRIPT_DIR/modules/config.sh"
source "$SCRIPT_DIR/modules/logger.sh"
source "$SCRIPT_DIR/modules/utils.sh"

NOW=$(date "+%Y-%m-%d %H:%M:%S")
echo -e "${BLUE}🔁 Running update-all at $NOW${RESET}"

while read -r repo; do
  [ -z "$repo" ] && continue
  if [ ! -d "$repo/.git" ]; then
    log_error "$repo is not a Git repository, skipping."
    continue
  fi

  # Optional: allow per-repo opt-out via .create-repo.local.conf
  if [[ -f "$repo/.create-repo.local.conf" ]]; then
    source "$repo/.create-repo.local.conf"
    if [[ "$disable_sync" == "true" ]]; then
      log_success "⏭️ Skipped $repo (sync disabled)"
      continue
    fi
  fi

  cd "$repo" || continue
  echo -e "${YELLOW}📁 Syncing: $repo${RESET}"
  branch=$(git symbolic-ref --short HEAD 2>/dev/null || echo "main")

  git add . &>/dev/null
  git commit -m "Auto-sync at $NOW" &>/dev/null || true
  git pull origin "$branch" --rebase &>/dev/null || true
  git push origin "$branch" &>/dev/null && log_success "$repo synced." || log_error "$repo push failed."

done < "$REPO_LIST"

echo -e "${GREEN}✅ All repositories processed.${RESET}"
