#!/bin/bash
set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–æ–¥—É–ª–µ–π
source "$SCRIPT_DIR/modules/colors.sh"
source "$SCRIPT_DIR/modules/flags.sh"
source "$SCRIPT_DIR/modules/version.sh"
source "$SCRIPT_DIR/modules/update.sh"
source "$SCRIPT_DIR/modules/help.sh"
source "$SCRIPT_DIR/modules/config.sh"
source "$SCRIPT_DIR/modules/platform.sh"
source "$SCRIPT_DIR/modules/repo.sh"
source "$SCRIPT_DIR/modules/logger.sh"
source "$SCRIPT_DIR/modules/status.sh"

# üèÅ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
  validate_flags "$@"

  repo=""
  platform_flag=""
  interactive=false
  show_help=false
  show_version=false
  run_update=false
  show_platform_status=false
  show_status=false
  show_log=false
  show_list=false
  pull_only=false
  dry_run=false
  sync_now=false

  while [[ $# -gt 0 ]]; do
    case $1 in
      --help|-h) show_help=true ;;
      --interactive) interactive=true ;;
      --platform=*) platform_flag="${1#*=}" ;;
      --platform-status) show_platform_status=true ;;
      --update) run_update=true ;;
      --version) show_version=true ;;
      --status) show_status=true ;;
      --log) show_log=true ;;
      --list) show_list=true ;;
      --pull-only) pull_only=true ;;
      --dry-run) dry_run=true ;;
      --sync-now) sync_now=true ;;
      *) [[ -z "$repo" ]] && repo=$1 ;;
    esac
    shift
  done

  $show_version && show_version && exit 0
  $run_update && check_for_update && exit 0
  $show_help && show_help && exit 0
  $show_platform_status && show_platform_bindings && exit 0
  $show_status && show_git_status && exit 0
  $show_log && cat "$LOG_FILE" && exit 0
  $show_list && cat "$REPO_LIST" && exit 0
  $pull_only && git pull origin "$(git branch --show-current)" && exit 0
  $dry_run && echo -e "${YELLOW}üîç Dry-run push:${RESET}" && git status && exit 0
  $sync_now && "$SCRIPT_DIR/update-all" && exit 0

  CURRENT_FOLDER=$(realpath "$PWD")
  load_config

  platform=$(detect_platform "$CURRENT_FOLDER" "$platform_flag")
  [[ -z "$platform" ]] && echo -e "${RED}‚ùå No Git platform detected.${RESET}" && exit 1

  repo=${repo:-$(basename "$PWD")}
  branch=${default_branch:-main}
  visibility=${default_visibility:-public}

  git_init_repo "$repo" "$branch" "$platform" "$visibility" "$(date '+%Y-%m-%d %H:%M:%S')" "$LOG_FILE" "$REPO_LIST"
  show_final_message "$repo" "$branch" "$PWD" "$REPO_LIST" "$platform"
}

main "$@"
