#!/bin/bash
set -e
set -x
trap 'echo "‚ùå FAILED at line $LINENO with exit code $?"' ERR

SCRIPT_VERSION="{{VERSION}}"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# üåç –≠–∫—Å–ø–æ—Ä—Ç –ø—É—Ç–µ–π
export PLATFORM_MAP="${PLATFORM_MAP:-$HOME/.create-repo.platforms}"
export LOG_FILE="${LOG_FILE:-$HOME/.create-repo.log}"
export REPO_LIST="${REPO_LIST:-$HOME/.repo-autosync.list}"

# üîó –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π
for file in colors flags version update help config platform repo logger doctor git; do
  full="$SCRIPT_DIR/modules/$file.sh"
  [[ ! -f "$full" ]] && echo "‚ùå Missing module: $file.sh" && exit 1
  echo "üîç Loading $file.sh"
  source "$full"
done

# üèÅ –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
  echo "üöÄ Starting create-repo"
  validate_flags "$@"

  repo=""
  platform_flag=""
  interactive=false
  dry_run=false

  while [[ $# -gt 0 ]]; do
    case $1 in
      --help|-h) show_help; exit 0 ;;
      --version) show_version; exit 0 ;;
      --update) check_for_update; exit 0 ;;
      --interactive) interactive=true ;;
      --platform=*) platform_flag="${1#*=}" ;;
      --platform-status) show_platform_bindings; exit 0 ;;
      --status) print_status_all; exit 0 ;;
      --log)
        [[ "$2" == "--errors" ]] && tail -n 20 "$HOME/.create-repo-errors.log" && exit 0
        tail -n 20 "$LOG_FILE" && exit 0
        ;;
      --list) print_repo_list; exit 0 ;;
      --remove)
        [[ "$2" == "--force" ]] && remove_repo_force "$(pwd)" && exit 0 ;;
      --pull-only) perform_pull_only; exit 0 ;;
      --dry-run)
        export NO_PUSH=true
        dry_run=true ;;
      --sync-now) sync_now; exit 0 ;;
      --doctor) doctor_check; exit 0 ;;
      *) [[ -z "$repo" ]] && repo="$1" ;;
    esac
    shift
  done

  export dry_run=${dry_run:-false}

  CURRENT_FOLDER=$(realpath "$PWD")
  echo "üìÅ Current folder: $CURRENT_FOLDER"
  load_config

  platform=$(detect_platform "$CURRENT_FOLDER" "$platform_flag" "$dry_run")
  [[ -z "$platform" ]] && platform="unknown"

  if [[ "$platform" == "unknown" ]]; then
    if [[ "$dry_run" == "true" ]]; then
      echo -e "${YELLOW}‚ö†Ô∏è Platform is unknown ‚Äî continuing due to dry-run.${RESET}"
    else
      echo -e "${RED}‚ùå No Git platform detected.${RESET}"
      exit 1
    fi
  fi

  repo=${repo:-$(basename "$PWD")}
  branch=${default_branch:-main}
  visibility=${default_visibility:-public}

  echo "üìå Repo: $repo"
  echo "üìå Branch: $branch"
  echo "üìå Platform: $platform"
  echo "üìå Visibility: $visibility"
  echo "üì¶ dry_run=$dry_run | NO_PUSH=$NO_PUSH"

  generate_readme
  generate_gitignore
  git_init_repo "$repo" "$branch" "$platform" "$visibility" "$(date '+%Y-%m-%d %H:%M:%S')" "$LOG_FILE" "$REPO_LIST"

  show_final_message "$repo" "$branch" "$PWD" "$REPO_LIST" "$platform"

  [[ "$dry_run" == "true" ]] && echo -e "${YELLOW}This was a dry-run. No git push or changes were made.${RESET}"
}

main "$@"
