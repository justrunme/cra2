#!/bin/bash
set -e
set -x

echo "üß™ Testing --update flow..."

BIN="${CREATE_REPO_BIN:-./create-repo}"
SCRIPT_DIR="$(dirname "$BIN")"

# 1) –£—Å—Ç–∞–Ω–æ–≤–∏–º ¬´—Å—Ç–∞—Ä—É—é¬ª –≤–µ—Ä—Å–∏—é –≤ version.sh (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
OLD_VERSION="0.1.0"
VERSION_FILE="$SCRIPT_DIR/modules/version.sh"

if [ -f "$VERSION_FILE" ]; then
  echo "‚ÑπÔ∏è Setting old version to $OLD_VERSION in $VERSION_FILE"
  sed -i "s|SCRIPT_VERSION=.*|SCRIPT_VERSION=\"$OLD_VERSION\"|" "$VERSION_FILE"
else
  echo "‚ö†Ô∏è version.sh not found, skipping manual version override"
fi

# 2) –ó–∞–ø—É—Å—Ç–∏–º create-repo --update
# –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –æ–Ω —Å–∫–∞—á–∞–µ—Ç –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é (–∏–∑ GitHub Releases) –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—à–µ—Ç —Ñ–∞–π–ª—ã
echo "üöÄ Running create-repo --update"
if ! "$BIN" --update; then
  echo "‚ùå Update command failed"
  exit 1
fi

# 3) –°–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–µ—Ä—Å–∏—è –∏–∑–º–µ–Ω–∏–ª–∞—Å—å (–∏–ª–∏ create-repo –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω)
NEW_VERSION_OUTPUT=$("$BIN" --version || true)
echo "‚ÑπÔ∏è New version output: $NEW_VERSION_OUTPUT"

# –î–æ–ø—É—Å—Ç–∏–º, –≤ —Å–≤–µ–∂–µ–º –≤–∞—Ä–∏–∞–Ω—Ç–µ –≤–µ—Ä—Å–∏—è = vX.Y.Z
# –ú–æ–∂–Ω–æ grep "version:" + —É–±–µ–∂–¥–∞—Ç—å—Å—è, —á—Ç–æ != $OLD_VERSION
if echo "$NEW_VERSION_OUTPUT" | grep -q "version:"; then
  # –í—ã—Ç—è–Ω–µ–º —Å–∞–º—É –≤–µ—Ä—Å–∏—é
  CURRENT_VER=$(echo "$NEW_VERSION_OUTPUT" | sed -n 's|.*version: *||p' | tr -d '[:space:]')
  echo "‚ÑπÔ∏è Detected version after update: $CURRENT_VER"

  if [ "$CURRENT_VER" == "$OLD_VERSION" ]; then
    echo "‚ùå Version not updated (still $OLD_VERSION)"
    exit 1
  fi
else
  echo "‚ùå No 'version:' in output ‚Äî maybe update didn't happen?"
  exit 1
fi

echo "‚úÖ Update test passed"
