#!/bin/bash
set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ –∫–æ–º–∞–Ω–¥—ã
set -x  # –ü–µ—á–∞—Ç–∞—Ç—å –∫–∞–∂–¥—É—é –∫–æ–º–∞–Ω–¥—É
trap 'echo "‚ùå FAILED at line $LINENO with exit code $?"' ERR

echo "üß™ Testing auto-sync and cron integration..."

BIN="${CREATE_REPO_BIN:-./create-repo}"
SCRIPT_DIR="$(dirname "$BIN")"

TMP_DIR=$(mktemp -d)
cd "$TMP_DIR"
echo "üìÅ TMP_DIR: $TMP_DIR"

# 1) –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ñ–∏–≥–æ–≤
rm -f ~/.repo-autosync.list ~/.create-repo.log ~/.create-repo.conf ~/.create-repo.platforms

# 2) –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥
echo "platform=github" > ~/.create-repo.conf
touch ~/.repo-autosync.list

# 3) –°–æ–∑–¥–∞—ë–º dummy git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
git init -b main &>/dev/null
echo "# Auto-sync test" > README.md
git add README.md
git config user.email "ci@example.com"
git config user.name "CI User"
git commit -m "init" &>/dev/null
git remote add origin https://example.com/fake.git

# 4) –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
echo "‚ÑπÔ∏è git status:"
git status
echo "‚ÑπÔ∏è current branch:"
git branch
echo "‚ÑπÔ∏è git remote -v:"
git remote -v

# 5) –ó–∞–ø—É—Å–∫–∞–µ–º create-repo —Å dry-run
echo "‚ñ∂Ô∏è Running create-repo with --dry-run..."
NO_PUSH=true "$BIN" --dry-run > create-repo-output.log 2>&1 || {
  echo "‚ùå create-repo failed. Output:"
  cat create-repo-output.log
  exit 1
}
echo "‚úÖ create-repo ran in dry-run mode successfully"

# 6) –î–æ–±–∞–≤–∏–º —Ñ–∞–π–ª –¥–ª—è sync
echo "Test $(date)" > test-sync.txt
git add test-sync.txt
git commit -m "Test auto-sync" &>/dev/null

# 7) –ó–∞–ø—É—Å–∫–∞–µ–º update-all
echo "‚ñ∂Ô∏è Running update-all..."
UPDATE_LOG=$(mktemp)
chmod +x "$SCRIPT_DIR/update-all"
echo "‚ÑπÔ∏è Using update-all at: $SCRIPT_DIR/update-all"

# --pull-only + NO_PUSH=true, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø—É—à–∞
NO_PUSH=true "$SCRIPT_DIR/update-all" --pull-only > "$UPDATE_LOG" 2>&1 || {

  # –ï—Å–ª–∏ update-all —É–ø–∞–ª (–∫–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞ ‚â† 0),
  # –Ω–æ –ª–æ–≥ —Å–æ–¥–µ—Ä–∂–∏—Ç "example.com/fake.git", —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ –æ–∂–∏–¥–∞–µ–º–æ–π –æ—à–∏–±–∫–æ–π (—Ñ–µ–π–∫–æ–≤—ã–π remote)
  if grep -q "example.com/fake.git" "$UPDATE_LOG"; then
    echo "‚ö†Ô∏è Fake remote failed as expected (example.com)."
  else
    echo "‚ùå update-all failed (–Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Ñ–µ–π–∫–æ–≤—ã–π remote):"
    cat "$UPDATE_LOG"
    exit 1
  fi
}

# 8) –ü—Ä–æ–≤–µ—Ä–∫–∞: –ª–æ–≥ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 'Pulling'
if ! grep -q "Pulling" "$UPDATE_LOG"; then
  echo "‚ùå update-all log does not contain 'Pulling':"
  cat "$UPDATE_LOG"
  exit 1
fi

# 9) –ï—Å–ª–∏ –¥–æ—à–ª–∏ —Å—é–¥–∞, –∑–Ω–∞—á–∏—Ç –≤—Å—ë –æ–∫
echo "‚úÖ Auto-sync and cron integration test passed"
exit 0
