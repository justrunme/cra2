name: Auto Tag, Build, Test and Release (DEB + macOS)

on:
  push:
    branches:
      - main

jobs:
  autotag:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4

      - name: üîñ Generate version tag
        id: set_version
        run: |
          git fetch --tags
          latest=$(git tag | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sed 's/^v//' | sort -V | tail -n1)
          if [[ -z "$latest" ]]; then
            major=1; minor=0; patch=0
          else
            IFS='.' read -r major minor patch <<< "$latest"
            patch=$((patch + 1))
          fi
          version="v$major.$minor.$patch"
          git tag -f "$version"
          git push origin -f "$version"
          echo "version=$version" >> "$GITHUB_OUTPUT"

  test:
    runs-on: ubuntu-latest
    needs: autotag
    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4

      - name: üß™ Run all tests
        run: |
          chmod +x create-repo
          export CREATE_REPO_BIN="$PWD/create-repo"
          chmod +x tests/*.sh
          for t in tests/test_*.sh; do
            echo "‚ñ∂Ô∏è Running $t"
            bash "$t"
          done

  build-deb:
    runs-on: ubuntu-latest
    needs: [autotag, test]
    steps:
      - uses: actions/checkout@v4

      - name: ‚úÖ Verify required modules
        run: |
          REQUIRED_MODULES=(
            colors.sh flags.sh version.sh update.sh help.sh config.sh
            platform.sh repo.sh logger.sh utils.sh cron.sh git.sh status.sh
          )
          for mod in "${REQUIRED_MODULES[@]}"; do
            if [ ! -f "modules/$mod"
