name: Auto Tag, Build and Release (DEB + macOS)

on:
  push:
    branches:
      - main

jobs:
  autotag:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 🔢 Generate version tag
        id: set_version
        run: |
          git fetch --tags
          latest=$(git tag | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sed 's/^v//' | sort -V | tail -n1)
          if [[ -z "$latest" ]]; then
            major=1; minor=0; patch=0
          else
            IFS='.' read -r major minor patch <<< "$latest"
            patch=$((patch + 1))
          fi
          version="v$major.$minor.$patch"
          git tag -f "$version"
          git push origin -f "$version"
          echo "version=$version" >> "$GITHUB_OUTPUT"

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 📦 Make create-repo executable and available
        run: |
          chmod +x create-repo
          sudo cp create-repo /usr/local/bin/

      - name: ✅ Run all tests
        run: |
          chmod +x test/*.sh
          bash test/run-all-tests.sh

  build-deb:
    runs-on: ubuntu-latest
    needs: [autotag, test]
    steps:
      - uses: actions/checkout@v4

      - name: 🛠 Build DEB
        run: |
          VERSION="${{ needs.autotag.outputs.version }}"
          mkdir -p pkg/usr/local/bin
          mkdir -p pkg/usr/local/bin/modules
          mkdir -p pkg/DEBIAN

          cp create-repo update-all install-create-repo.sh pkg/usr/local/bin/
          cp modules/*.sh pkg/usr/local/bin/modules/
          chmod +x pkg/usr/local/bin/*

          sed -i "s|{{VERSION}}|$VERSION|g" pkg/usr/local/bin/create-repo

          echo "Package: create-repo" > pkg/DEBIAN/control
          echo "Version: ${VERSION#v}" >> pkg/DEBIAN/control
          echo "Section: utils" >> pkg/DEBIAN/control
          echo "Priority: optional" >> pkg/DEBIAN/control
          echo "Architecture: all" >> pkg/DEBIAN/control
          echo "Maintainer: you@example.com" >> pkg/DEBIAN/control
          echo "Description: Git auto-sync CLI with modular structure" >> pkg/DEBIAN/control

          echo "#!/bin/bash" > pkg/DEBIAN/postinst
          echo "echo ✅ Installed create-repo ${VERSION#v}" >> pkg/DEBIAN/postinst
          chmod +x pkg/DEBIAN/postinst

          dpkg-deb --build pkg
          mv pkg.deb create-repo_${VERSION#v}.deb

          sha256sum create-repo_*.deb > checksums.txt

  build-mac:
    runs-on: macos-latest
    needs: [autotag, test]
    steps:
      - uses: actions/checkout@v4

      - name: 🌧️ Build PKG
        run: |
          VERSION="${{ needs.autotag.outputs.version }}"
          mkdir -p pkg-root/usr/local/bin
          mkdir -p pkg-root/usr/local/bin/modules

          cp create-repo update-all install-create-repo.sh pkg-root/usr/local/bin/
          cp modules/*.sh pkg-root/usr/local/bin/modules/
          chmod +x pkg-root/usr/local/bin/*

          sed -i '' "s|{{VERSION}}|$VERSION|g" pkg-root/usr/local/bin/create-repo

          pkgbuild \
            --identifier com.justrunme.create-repo \
            --version ${VERSION#v} \
            --install-location / \
            --root pkg-root \
            create-repo_${VERSION#v}.pkg

          shasum -a 256 create-repo_*.pkg >> checksums.txt

  release:
    runs-on: ubuntu-latest
    needs: [build-deb, build-mac]
    steps:
      - uses: actions/checkout@v4
      - name: 🚀 Release to GitHub
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.autotag.outputs.version }}
          name: Release ${{ needs.autotag.outputs.version }}
          body: |
            🔄 Auto-generated release
            ✏️ Version: ${{ needs.autotag.outputs.version }}
            📦 Includes:
            - create-repo
            - update-all
            - install-create-repo.sh
            - All modules
            - .deb and .pkg installers
          files: |
            create-repo_*.deb
            create-repo_*.pkg
            install-create-repo.sh
            checksums.txt
