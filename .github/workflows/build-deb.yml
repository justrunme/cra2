name: Auto Tag, Build and Release DEB

on:
  push:
    branches:
      - main

jobs:
  build-deb:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0    # –ë–µ—Ä—ë–º –≤—Å–µ —Ç–µ–≥–∏ –∏ –∏—Å—Ç–æ—Ä–∏—é

      - name: üîß Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: üî¢ Auto-tag version
        id: autotag
        shell: bash
        run: |
          # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏
          git fetch --tags

          # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ–≥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ vX.Y.Z
          latest=$(git tag | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sed 's/^v//' | sort -V | tail -n1)
          echo "Latest tag found: $latest"

          if [[ -z "$latest" ]]; then
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ ‚Äî –Ω–∞—á–∏–Ω–∞–µ–º —Å 1.0.0
            major=1; minor=0; patch=0
          else
            IFS='.' read -r major minor patch <<< "$latest"
            patch=$((patch + 1))
          fi

          new_tag="v$major.$minor.$patch"
          echo "New tag: $new_tag"

          # –°–æ–∑–¥–∞—ë–º/–æ–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–≥, –ø—É—à–∏–º —Å --force
          git tag -f "$new_tag"
          git push origin -f "$new_tag"

          # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —à–∞–≥–∞—Ö
          echo "new_tag=$new_tag" >> "$GITHUB_OUTPUT"

      - name: üèó Replace {{VERSION}} in scripts
        run: |
          # –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å placeholder {{VERSION}} –≤ create-repo –∏–ª–∏ update-all
          # –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Ç–µ–≥
          VERSION="${{ steps.autotag.outputs.new_tag }}"
          sed -i "s/{{VERSION}}/$VERSION/g" create-repo
          sed -i "s/{{VERSION}}/$VERSION/g" update-all

      - name: üõ† Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev

      - name: üì¶ Build DEB package
        run: |
          VERSION="${{ steps.autotag.outputs.new_tag }}"
          # 1) –°–æ–∑–¥–∞—ë–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É: pkg/usr/local/bin + pkg/DEBIAN
          mkdir -p pkg/usr/local/bin
          mkdir -p pkg/DEBIAN

          # 2) –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç—ã
          cp create-repo pkg/usr/local/bin/
          cp update-all pkg/usr/local/bin/
          chmod +x pkg/usr/local/bin/create-repo pkg/usr/local/bin/update-all

          # 3) –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã DEBIAN/
          # –í–∞–∂–Ω–æ, —á—Ç–æ–±—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –±—ã–ª –∫–∞—Ç–∞–ª–æ–≥ DEBIAN/ —Å control, postinst, prerm
          cp DEBIAN/control pkg/DEBIAN/control
          cp DEBIAN/postinst pkg/DEBIAN/postinst
          cp DEBIAN/prerm pkg/DEBIAN/prerm
          # optional: cp DEBIAN/postrm pkg/DEBIAN/postrm

          chmod +x pkg/DEBIAN/postinst pkg/DEBIAN/prerm
          # (optional) chmod +x pkg/DEBIAN/postrm

          # 4) –í—Å—Ç–∞–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é –≤ control:
          sed -i "s/^Version:.*/Version: ${VERSION#v}/" pkg/DEBIAN/control

          # 5) –°–æ–±–∏—Ä–∞–µ–º –ø–∞–∫–µ—Ç
          dpkg-deb --build pkg
          mv pkg.deb create-repo_${VERSION#v}.deb

      - name: üöÄ Release to GitHub
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.autotag.outputs.new_tag }}
          name: Release ${{ steps.autotag.outputs.new_tag }}
          body: |
            üîÑ Auto-build .deb

            ‚úèÔ∏è Changes:
            - Auto-synced from main
          files: |
            create-repo_*.deb
