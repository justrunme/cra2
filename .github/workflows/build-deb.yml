name: Auto Tag, Build and Release DEB

on:
  push:
    branches:
      - main

jobs:
  build-deb:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout
        uses: actions/checkout@v4

      - name: üîß Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: üî¢ Auto-tag version
        id: autotag
        shell: bash
        run: |
          git fetch --tags
          # Find the latest existing tag in vN.N.N format
          latest=$(git tag | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sed 's/^v//' | sort -V | tail -n1)
          echo "Latest tag: $latest"

          if [[ -z "$latest" ]]; then
            # If none exists, start at 1.0.0 or your preference
            major=1; minor=0; patch=0
          else
            IFS='.' read -r major minor patch <<< "$latest"
            patch=$((patch + 1))
          fi
          new_tag="v$major.$minor.$patch"

          # Force-create or update the tag
          git tag -f "$new_tag"
          git push origin -f "$new_tag"

          echo "new_tag=$new_tag" >> "$GITHUB_OUTPUT"

      - name: üèó Replace version in scripts
        run: |
          # Example: If you have a placeholder {{VERSION}} in create-repo or update-all
          VERSION="${{ steps.autotag.outputs.new_tag }}"
          sed -i "s/{{VERSION}}/$VERSION/g" create-repo
          sed -i "s/{{VERSION}}/$VERSION/g" update-all

      - name: üõ† Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev

      - name: üì¶ Build DEB package
        run: |
          VERSION="${{ steps.autotag.outputs.new_tag }}"
          mkdir -p pkg/usr/local/bin
          mkdir -p pkg/DEBIAN

          # Copy scripts
          cp create-repo pkg/usr/local/bin/
          cp update-all pkg/usr/local/bin/
          chmod +x pkg/usr/local/bin/create-repo pkg/usr/local/bin/update-all

          # Copy Debian control files
          cp DEBIAN/control pkg/DEBIAN/control
          cp DEBIAN/postinst pkg/DEBIAN/postinst
          cp DEBIAN/prerm pkg/DEBIAN/prerm
          # optional: cp DEBIAN/postrm pkg/DEBIAN/postrm
          chmod +x pkg/DEBIAN/postinst pkg/DEBIAN/prerm

          # Insert version into control file
          sed -i "s/^Version:.*/Version: ${VERSION#v}/" pkg/DEBIAN/control

          # Build .deb
          dpkg-deb --build pkg
          mv pkg.deb create-repo_${VERSION#v}.deb

      - name: üöÄ Release to GitHub
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.autotag.outputs.new_tag }}
          name: Release ${{ steps.autotag.outputs.new_tag }}
          body: |
            üîÑ Auto-build .deb

            ‚úèÔ∏è Changes:
            - Auto-synced from main
          files: create-repo_*.deb
